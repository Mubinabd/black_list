// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: blacklist_submodule/hr_service/admin.proto

package hr_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminAndHR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Role     string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AdminAndHR) Reset() {
	*x = AdminAndHR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAndHR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAndHR) ProtoMessage() {}

func (x *AdminAndHR) ProtoReflect() protoreflect.Message {
	mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAndHR.ProtoReflect.Descriptor instead.
func (*AdminAndHR) Descriptor() ([]byte, []int) {
	return file_blacklist_submodule_hr_service_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdminAndHR) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminAndHR) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminAndHR) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AdminAndHR) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AdminAndHRCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Role     string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AdminAndHRCreate) Reset() {
	*x = AdminAndHRCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAndHRCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAndHRCreate) ProtoMessage() {}

func (x *AdminAndHRCreate) ProtoReflect() protoreflect.Message {
	mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAndHRCreate.ProtoReflect.Descriptor instead.
func (*AdminAndHRCreate) Descriptor() ([]byte, []int) {
	return file_blacklist_submodule_hr_service_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdminAndHRCreate) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminAndHRCreate) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AdminAndHRCreate) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AdminAndHRUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateBody *AdminAndHRCreate `protobuf:"bytes,2,opt,name=update_body,json=updateBody,proto3" json:"update_body,omitempty"`
}

func (x *AdminAndHRUpdateReq) Reset() {
	*x = AdminAndHRUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAndHRUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAndHRUpdateReq) ProtoMessage() {}

func (x *AdminAndHRUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAndHRUpdateReq.ProtoReflect.Descriptor instead.
func (*AdminAndHRUpdateReq) Descriptor() ([]byte, []int) {
	return file_blacklist_submodule_hr_service_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AdminAndHRUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminAndHRUpdateReq) GetUpdateBody() *AdminAndHRCreate {
	if x != nil {
		return x.UpdateBody
	}
	return nil
}

type GetAllAdminAndHRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   string  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Filter *Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetAllAdminAndHRReq) Reset() {
	*x = GetAllAdminAndHRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdminAndHRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdminAndHRReq) ProtoMessage() {}

func (x *GetAllAdminAndHRReq) ProtoReflect() protoreflect.Message {
	mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdminAndHRReq.ProtoReflect.Descriptor instead.
func (*GetAllAdminAndHRReq) Descriptor() ([]byte, []int) {
	return file_blacklist_submodule_hr_service_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllAdminAndHRReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetAllAdminAndHRReq) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAllAdminAndHRRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admins []*AdminAndHR `protobuf:"bytes,1,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (x *GetAllAdminAndHRRes) Reset() {
	*x = GetAllAdminAndHRRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdminAndHRRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdminAndHRRes) ProtoMessage() {}

func (x *GetAllAdminAndHRRes) ProtoReflect() protoreflect.Message {
	mi := &file_blacklist_submodule_hr_service_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdminAndHRRes.ProtoReflect.Descriptor instead.
func (*GetAllAdminAndHRRes) Descriptor() ([]byte, []int) {
	return file_blacklist_submodule_hr_service_admin_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllAdminAndHRRes) GetAdmins() []*AdminAndHR {
	if x != nil {
		return x.Admins
	}
	return nil
}

var File_blacklist_submodule_hr_service_admin_proto protoreflect.FileDescriptor

var file_blacklist_submodule_hr_service_admin_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x2b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x68, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e,
	0x64, 0x48, 0x52, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x5e, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x64, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e,
	0x64, 0x48, 0x52, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x55, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52,
	0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x52, 0x06, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x73, 0x32, 0x82, 0x03, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64,
	0x48, 0x52, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0x10, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x68,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x48, 0x52, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x68,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blacklist_submodule_hr_service_admin_proto_rawDescOnce sync.Once
	file_blacklist_submodule_hr_service_admin_proto_rawDescData = file_blacklist_submodule_hr_service_admin_proto_rawDesc
)

func file_blacklist_submodule_hr_service_admin_proto_rawDescGZIP() []byte {
	file_blacklist_submodule_hr_service_admin_proto_rawDescOnce.Do(func() {
		file_blacklist_submodule_hr_service_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_blacklist_submodule_hr_service_admin_proto_rawDescData)
	})
	return file_blacklist_submodule_hr_service_admin_proto_rawDescData
}

var file_blacklist_submodule_hr_service_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_blacklist_submodule_hr_service_admin_proto_goTypes = []any{
	(*AdminAndHR)(nil),          // 0: hr_service.AdminAndHR
	(*AdminAndHRCreate)(nil),    // 1: hr_service.AdminAndHRCreate
	(*AdminAndHRUpdateReq)(nil), // 2: hr_service.AdminAndHRUpdateReq
	(*GetAllAdminAndHRReq)(nil), // 3: hr_service.GetAllAdminAndHRReq
	(*GetAllAdminAndHRRes)(nil), // 4: hr_service.GetAllAdminAndHRRes
	(*Filter)(nil),              // 5: hr_service.Filter
	(*GetByIdReq)(nil),          // 6: hr_service.GetByIdReq
	(*Void)(nil),                // 7: hr_service.Void
}
var file_blacklist_submodule_hr_service_admin_proto_depIdxs = []int32{
	1, // 0: hr_service.AdminAndHRUpdateReq.update_body:type_name -> hr_service.AdminAndHRCreate
	5, // 1: hr_service.GetAllAdminAndHRReq.filter:type_name -> hr_service.Filter
	0, // 2: hr_service.GetAllAdminAndHRRes.admins:type_name -> hr_service.AdminAndHR
	1, // 3: hr_service.AdminAndHRService.Create:input_type -> hr_service.AdminAndHRCreate
	6, // 4: hr_service.AdminAndHRService.Get:input_type -> hr_service.GetByIdReq
	3, // 5: hr_service.AdminAndHRService.GetAll:input_type -> hr_service.GetAllAdminAndHRReq
	2, // 6: hr_service.AdminAndHRService.Update:input_type -> hr_service.AdminAndHRUpdateReq
	6, // 7: hr_service.AdminAndHRService.Delete:input_type -> hr_service.GetByIdReq
	6, // 8: hr_service.AdminAndHRService.Approve:input_type -> hr_service.GetByIdReq
	7, // 9: hr_service.AdminAndHRService.Create:output_type -> hr_service.Void
	0, // 10: hr_service.AdminAndHRService.Get:output_type -> hr_service.AdminAndHR
	4, // 11: hr_service.AdminAndHRService.GetAll:output_type -> hr_service.GetAllAdminAndHRRes
	7, // 12: hr_service.AdminAndHRService.Update:output_type -> hr_service.Void
	7, // 13: hr_service.AdminAndHRService.Delete:output_type -> hr_service.Void
	7, // 14: hr_service.AdminAndHRService.Approve:output_type -> hr_service.Void
	9, // [9:15] is the sub-list for method output_type
	3, // [3:9] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_blacklist_submodule_hr_service_admin_proto_init() }
func file_blacklist_submodule_hr_service_admin_proto_init() {
	if File_blacklist_submodule_hr_service_admin_proto != nil {
		return
	}
	file_blacklist_submodule_hr_service_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blacklist_submodule_hr_service_admin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAndHR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blacklist_submodule_hr_service_admin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAndHRCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blacklist_submodule_hr_service_admin_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAndHRUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blacklist_submodule_hr_service_admin_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAdminAndHRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blacklist_submodule_hr_service_admin_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAdminAndHRRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blacklist_submodule_hr_service_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blacklist_submodule_hr_service_admin_proto_goTypes,
		DependencyIndexes: file_blacklist_submodule_hr_service_admin_proto_depIdxs,
		MessageInfos:      file_blacklist_submodule_hr_service_admin_proto_msgTypes,
	}.Build()
	File_blacklist_submodule_hr_service_admin_proto = out.File
	file_blacklist_submodule_hr_service_admin_proto_rawDesc = nil
	file_blacklist_submodule_hr_service_admin_proto_goTypes = nil
	file_blacklist_submodule_hr_service_admin_proto_depIdxs = nil
}
